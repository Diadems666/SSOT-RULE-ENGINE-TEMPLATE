# Bottle Shop End of Trade Web Application - Context

## Project Context
This Flask web application was developed for Australian bottle shops to streamline their end-of-trade reconciliation process. The bottle shop manager needs to perform daily reconciliation of sales, cash handling, and financial reporting to ensure accurate records and identify any discrepancies. The application provides a comprehensive solution with a focus on Australian currency denomination management and float balancing.

## Business Problem
Bottle shop managers must maintain accurate financial records at the end of each trading day. This involves:
1. Counting cash in both the safe float ($1,500 target) and till float ($500 target)
2. Recording various payment methods (EFTPOS, cards, accounts)
3. Reconciling these amounts against the point-of-sale (POS) system total
4. Identifying and addressing any variances
5. Finalizing the daily financial record

Manual processes are time-consuming and error-prone, especially when counting various denominations of Australian currency. This application automates calculations, suggests optimal denomination distributions, and provides a structured workflow for the reconciliation process.

## Technical Approach
The application implements:
- A Flask backend with SQLite database for persistent storage
- SQLAlchemy ORM for database interactions
- RESTful API endpoints for AJAX operations
- Bootstrap-based responsive frontend for desktop and tablet use
- Client-side JavaScript for dynamic calculations
- JSON storage for denomination tracking

The architecture separates concerns through:
- Controllers (routes and request handling)
- Models (database schema and relationships)
- Services (business logic, especially currency calculations)
- Templates (presentation layer)

## Current State
The application has been implemented with all core features:
- Calendar-based date selection
- Full Australian currency denomination support
- Safe float and till float management
- Automated reconciliation with variance calculation
- Daily settlement functionality

The system uses a SQLite database with a single table (daily_takings) that stores all necessary information for each day's reconciliation process. Denomination counts are stored as JSON strings for flexibility. 